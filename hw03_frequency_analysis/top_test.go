package hw03frequencyanalysis

import (
	"testing"

	"github.com/stretchr/testify/require"
)

// Change to true if needed.
var taskWithAsteriskIsCompleted = true

var text = `Как видите, он  спускается  по  лестнице  вслед  за  своим
	другом   Кристофером   Робином,   головой   вниз,  пересчитывая
	ступеньки собственным затылком:  бум-бум-бум.  Другого  способа
	сходить  с  лестницы  он  пока  не  знает.  Иногда ему, правда,
		кажется, что можно бы найти какой-то другой способ, если бы  он
	только   мог   на  минутку  перестать  бумкать  и  как  следует
	сосредоточиться. Но увы - сосредоточиться-то ему и некогда.
		Как бы то ни было, вот он уже спустился  и  готов  с  вами
	познакомиться.
	- Винни-Пух. Очень приятно!
		Вас,  вероятно,  удивляет, почему его так странно зовут, а
	если вы знаете английский, то вы удивитесь еще больше.
		Это необыкновенное имя подарил ему Кристофер  Робин.  Надо
	вам  сказать,  что  когда-то Кристофер Робин был знаком с одним
	лебедем на пруду, которого он звал Пухом. Для лебедя  это  было
	очень   подходящее  имя,  потому  что  если  ты  зовешь  лебедя
	громко: "Пу-ух! Пу-ух!"- а он  не  откликается,  то  ты  всегда
	можешь  сделать вид, что ты просто понарошку стрелял; а если ты
	звал его тихо, то все подумают, что ты  просто  подул  себе  на
	нос.  Лебедь  потом  куда-то делся, а имя осталось, и Кристофер
	Робин решил отдать его своему медвежонку, чтобы оно не  пропало
	зря.
		А  Винни - так звали самую лучшую, самую добрую медведицу
	в  зоологическом  саду,  которую  очень-очень  любил  Кристофер
	Робин.  А  она  очень-очень  любила  его. Ее ли назвали Винни в
	честь Пуха, или Пуха назвали в ее честь - теперь уже никто  не
	знает,  даже папа Кристофера Робина. Когда-то он знал, а теперь
	забыл.
		Словом, теперь мишку зовут Винни-Пух, и вы знаете почему.
		Иногда Винни-Пух любит вечерком во что-нибудь поиграть,  а
	иногда,  особенно  когда  папа  дома,  он больше любит тихонько
	посидеть у огня и послушать какую-нибудь интересную сказку.
		В этот вечер...`

var alternateText = `竹ニ ょノ 気あヘ河ボル温閲宴塩慰 じ夜 煙ョハ囲ぃャ 
	はゥ んト 下乙キヿー姻ぢ運 哀ドノス壱液奥 やヸ陰 ぷ閲ドフ萎俺ヒぷ凹な生 
	陰ベ案ヨ 憶ア浦咽ド代威履衣ブ医 ーァ陰悦ちマドこ謁ャゴぺ線者 仮ニ茨ア暗ご押ア韻 
	ずヹ陰サだ音温ユ ユ延 怨めね ポ わ竹ホ殴 俺まッレズ ピきギス欧飲めラ安 円がゞ謁炎ン案駅 
	ドて旺 めロ可くフ現づ へだ ダ媛 閲卸イ マダス芋ピ炎押ザ ぬイぎォうホ遠緯疫新ヌ艶ヺマ 
	横グ エ ブが穏淫を為ゟ押マド悪ぬそ下ィロ園唄悪唄安ぃ殴蒸の げ科 日尉煙泳ふ価ーせーヂ艶プでヵ 
	だデ 線ゃのあ横ト挨姻新 ヺ沿煙ゞくム握え内あ臆の慰いヌゐ悦ぜ行俺悪 
	ゖ唄ヿうそドば ゠ 夜マ屋くぬ音桜ざカ閲ポ位ぇ生 や 虞ェッキヘぼフ どあ 
	媛び価炎ンはッヮァな往ほぁん スわラ宇ス往 竹ニ 竹ニ 竹ニ 竹ニ
	竹ニ: げ科 じ夜 レズ レズ
	竹ニ: ずヹ陰サだ音温ユ\どあ
	じ夜;ずヹ陰サだ音温ユ #だデ 15+15+15+15+15+15=90,90,'90';"90"
	はゥ - はゥ;はゥ,はゥ *はゥ
	レズ?どあ!`

var frenchCakes = `съешь же ещё этих мягких французских булок, да выпей чаю`

var shortSentence = `Yeah - yeah, just eat it already, yeah`

func TestTop10(t *testing.T) {
	t.Run("no words in empty string", func(t *testing.T) {
		require.Len(t, Top10(""), 0)
	})

	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"а",         // 8
				"он",        // 8
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"в",         // 4
				"его",       // 4
				"если",      // 4
				"кристофер", // 4
				"не",        // 4
			}
			require.Equal(t, expected, Top10(text))
		} else {
			expected := []string{
				"он",        // 8
				"а",         // 6
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"-",         // 4
				"Кристофер", // 4
				"если",      // 4
				"не",        // 4
				"то",        // 4
			}
			require.Equal(t, expected, Top10(text))
		}
	})

	t.Run("alternate positive text with different separators", func(t *testing.T) {
		expected := []string{
			"竹ニ",       // 7
			"15",       // 6
			"はゥ",       // 6
			"90",       // 4
			"じ夜",       // 3
			"ずヹ陰サだ音温ユ", // 3
			"どあ",       // 3
			"レズ",       // 3
			"げ科",       // 2
			"だデ",       // 2
		}
		require.Equal(t, expected, Top10(alternateText))
	})

	t.Run("text with 10 unique words", func(t *testing.T) {
		expected := []string{
			"булок",       // 1
			"выпей",       // 1
			"да",          // 1
			"ещё",         // 1
			"же",          // 1
			"мягких",      // 1
			"съешь",       // 1
			"французских", // 1
			"чаю",         // 1
			"этих",        // 1
		}
		require.Equal(t, expected, Top10(frenchCakes))
	})

	t.Run("test sentence with less than 10 words", func(t *testing.T) {
		expected := []string{
			"yeah",    // 3
			"already", // 1
			"eat",     // 1
			"it",      // 1
			"just",    // 1
		}
		require.Equal(t, expected, Top10(shortSentence))
	})
}
